private void openScheduleAssistantWindow() {
    // Create a new dialog for the Schedule Assistant
    JDialog scheduleAssistantDialog = new JDialog(this, "Schedule Assistant", true);
    scheduleAssistantDialog.setSize(400, 300);
    scheduleAssistantDialog.setLayout(new BorderLayout());
    scheduleAssistantDialog.setLocationRelativeTo(this);

    // Create panel to display time slots
    JPanel timeSlotPanel = new JPanel();
    timeSlotPanel.setLayout(new GridLayout(0, 1, 10, 10));  // Dynamic grid to display slots
    timeSlotPanel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));

    // Define the start and end time for slots (9:00 AM to 5:00 PM)
    LocalDate currentDate = LocalDate.now();
    String startTime = "09:00 AM";
    String endTime = "05:00 PM";
    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("hh:mm a");

    // Convert start and end times to LocalTime for manipulation
    LocalDate startLocalDate = currentDate.atTime(9, 0); // 9:00 AM
    LocalDate endLocalDate = currentDate.atTime(17, 0); // 5:00 PM

    // Generate available time slots in 15-minute intervals
    for (LocalDate time = startLocalDate; time.isBefore(endLocalDate); time = time.plusMinutes(15)) {
        String slotTime = time.format(formatter);
        JButton slotButton = new JButton(slotTime);
        slotButton.addActionListener(e -> {
            // Handle slot selection (update the appointment time or show confirmation)
            JOptionPane.showMessageDialog(scheduleAssistantDialog, "Selected Slot: " + slotTime);
        });
        timeSlotPanel.add(slotButton);
    }

    // Add the time slot panel to the dialog
    scheduleAssistantDialog.add(timeSlotPanel, BorderLayout.CENTER);

    // Close button
    JButton closeButton = new JButton("Close");
    closeButton.addActionListener(e -> scheduleAssistantDialog.dispose());
    scheduleAssistantDialog.add(closeButton, BorderLayout.SOUTH);

    // Show the schedule assistant window
    scheduleAssistantDialog.setVisible(true);
}
